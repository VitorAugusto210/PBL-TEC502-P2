version: '3.8'

services:
  # --- BROKER MQTT ---
  mosquitto:
    image: eclipse-mosquitto:latest
    ports:
      - "1883:1883"
    volumes:
      - ./mosquitto/config:/mosquitto/config

  # --- BLOCKCHAIN (LEDGER) ---
  ganache:
    image: trufflesuite/ganache-cli:latest
    command: ganache-cli -h 0.0.0.0 --db /ganache-data --deterministic
    ports:
      - "7545:8545" # Expõe a porta 8545 interna como 7545 na sua máquina

  # --- SCRIPT DE DEPLOY DO SMART CONTRACT ---
  blockchain_deployer:
    build: ./blockchain
    depends_on:
      - ganache
    volumes:
      - ./blockchain:/app/
    environment:
      # --- CORREÇÃO APLICADA AQUI ---
      # A comunicação interna deve usar a porta 8545
      - BLOCKCHAIN_PROVIDER_URL=http://ganache:8545
    command: python scripts/deploy.py

  # --- SERVIÇOS DAS EMPRESAS ---
  empresa_a: &empresa-template
    build: ./empresa
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000
    volumes:
      - ./empresa/app:/app/app
      - ./blockchain/scripts:/app/blockchain/scripts
    ports:
      - "8001:8000"
    depends_on:
      blockchain_deployer:
        condition: service_completed_successfully
    environment:
      # --- CORREÇÃO APLICADA AQUI ---
      # A comunicação interna deve usar a porta 8545
      - BLOCKCHAIN_PROVIDER_URL=http://ganache:8545
    healthcheck: &api-healthcheck
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 5s
      timeout: 10s
      retries: 10

  empresa_b:
    <<: *empresa-template
    ports:
      - "8002:8000"

  empresa_c:
    <<: *empresa-template
    ports:
      - "8003:8000"

  # --- SIMULADOR DE CENÁRIOS ---
  simulador:
    build: ./carro
    command: python simulador_carros.py
    depends_on:
      empresa_a:
        condition: service_healthy
      empresa_b:
        condition: service_healthy
      empresa_c:
        condition: service_healthy
    environment:
      - EMPRESA_A_URL=http://empresa_a:8000
      - EMPRESA_B_URL=http://empresa_b:8000
      - EMPRESA_C_URL=http://empresa_c:8000

  # --- CARRO INDIVIDUAL (CLIENTE MQTT) ---
  carro1:
    build: ./carro
    command: python carro.py
    depends_on:
      - mosquitto